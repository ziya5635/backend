{"version":3,"sources":["services/people.js","components/Button.js","components/Listing.js","components/Filter.js","components/PersonForm.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","post","id","delete","obj","put","Button","setPeople","name","setSuccessMessage","onClick","event","preventDefault","window","confirm","peopleService","catch","err","console","log","message","setTimeout","Listing","people","keyword","filter","person","toLowerCase","includes","map","key","number","Filter","setKeyword","value","onChange","target","PersonForm","props","newName","candidate","setNewName","newPhone","setPhone","type","some","toUpdate","find","setErrorMessage","concat","Notification","status","className","App","useState","successMessage","errorMessage","useEffect","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcc2bb59.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = 'api/people';\n\nconst getAll = () => {\n\tconst req = axios.get(baseUrl);\n\treturn req.then(res => res.data);\n};\n\nconst getOne = (name) => {\n\tconst req = axios.get(`${baseUrl}/?name=${name}`);\n\treturn req.then(res => res.data[0]);\n}\n\nconst create = data => {\n\tconst req = axios.post(baseUrl, data);\n\treturn req.then(res => res.data);\n};\n\nconst remove = id => {\n\tconst req = axios.delete(`${baseUrl}/${id}`);\n\treturn req.then(res => res);\n}\n\nconst update = (id, obj) => {\n\tconst req = axios.put(`${baseUrl}/${id}`, obj);\n\treturn req.then(res => res.data);\n}\n\nexport default {getAll, create, remove, update, getOne};\n","import React from 'react';\nimport peopleService from '../services/people';\n\nconst Button = ({id, setPeople, name, setSuccessMessage}) => {\n\tconst handler = (event) => {\n\n\t\tconst sync = () => {\n\t\t\tpeopleService.getAll()\n\t\t\t\t.then(res => setPeople(res))\n\t\t\t\t\t.catch(err => console.log(err.message));\n\t\t\t\t};\n\n\t\tevent.preventDefault();\n\t\tif (window.confirm(`Delete ${name}?`)) {\n\t\t \tpeopleService.remove(id)\n\t\t\t\t.then(() => {\n\t\t\t\t\tsync();\n\t\t\t\t\tsetSuccessMessage(`${name} removed successfuly from server.`);\n\t\t\t\t\tsetTimeout(() => setSuccessMessage(null), 5000);\n\t\t\t\t})\n\t\t\t\t\t.catch(err => console.log(err.message));\n\n\t\t } \n\n\t}\n\n\treturn <button onClick={handler}>delete</button>\n}\n\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\n\nconst Listing = ({ people, keyword, setPeople, setSuccessMessage }) => {\n\n\tconst toShow = people.filter(person => person.name.toLowerCase().includes(keyword.toLowerCase()))\n\treturn(toShow.map(person => <div key={person.name}>{person.name} {person.number} <Button id={person.id} setPeople={setPeople} name={person.name} setSuccessMessage={setSuccessMessage}/></div>))\n\n}\n\n\nexport default Listing;\n","import React from 'react';\n\n\nconst Filter = ({keyword, setKeyword}) => {\n\tconst keywordHandler = event => {\n    \tsetKeyword(event.target.value);\n \t };\n\treturn <div>filter shown with <input value={keyword} onChange={keywordHandler} /></div>\n}\n\n\n\nexport default Filter;","import React from 'react'\nimport peopleService from '../services/people';\n\nconst PersonForm = (props) => {\n\n  const nameHandler = event => {\n    const candidate = event.target.value;\n    props.setNewName(candidate);\n  };\n  const phoneHandler = event => {\n    props.setPhone(event.target.value);\n  }\n\n  const checkNameExistence = () => props.people.some(person => person.name === props.newName);\n  \n\n  const buttonHandler = event => {\n    if (checkNameExistence()) {\n        event.preventDefault();\n        const toUpdate = props.people.find(person => person.name === props.newName);\n        if (window.confirm(props.newName + ' is already added to phonebook, replace the old number with a new one?')) {\n            peopleService.update(toUpdate.id, {...toUpdate, number:props.newPhone})\n              .then(res => {\n                props.setNewName('');\n                props.setPhone('');\n                props.setPeople(props.people.map(person => person.id !== res.id ? person:res));\n                props.setSuccessMessage(`${toUpdate.name} info updated successfully.`);\n                setTimeout(() => props.setSuccessMessage(null), 5000);\n              })\n                .catch(err => {\n                  props.setErrorMessage(`Information of ${toUpdate.name} has already been removed from server.`);\n                  setTimeout(() => props.setErrorMessage(null), 5000);\n                });\n\n        }  \n\n    } else {\n          event.preventDefault();\n          peopleService.create({name: props.newName, number: props.newPhone})\n            .then(res => props.setPeople(props.people.concat(res)));\n          props.setNewName('');\n          props.setPhone('');\n          props.setSuccessMessage(`Added ${props.newName} to phonebook.`);\n          setTimeout(() => props.setSuccessMessage(null), 5000);\n    }\n\n  }\n\treturn(\n      <form>\n        <div>\n          name: <input value={props.newName} onChange={nameHandler} />\n        </div>\n        <div>\n          number: <input value={props.newPhone} onChange={phoneHandler} />\n        </div>\n        <div>\n          <button type='submit' onClick={buttonHandler}>add</button>\n        </div>\n      </form>\n\t\t)\n}\n\nexport default PersonForm;","import React from 'react';\n\n\nconst Notification = ({message, status}) => {\n\t\n\tif (message === null) {\n\t\treturn null;\n\t}\n\treturn (\n\t\t<div className={status}>\n\t\t\t{message}\n\t\t</div>\n\t\t)\n}\n\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Listing from './components/Listing';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport peopleService from './services/people';\nimport Notification from './components/Notification';\nimport './index.css';\n\nconst App = () => {\n\n  const [people, setPeople] = useState([]);\n\n  const [ newName, setNewName ] = useState('');\n\n  const [ newPhone, setPhone ] = useState('');\n\n  const [ keyword, setKeyword ] = useState('');\n\n  const [ successMessage, setSuccessMessage ] = useState(null);\n\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    peopleService.getAll()\n      .then(res => setPeople(res))\n      .catch(error => console.log(error.message));\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={successMessage} status='success'/>\n      <Notification message={errorMessage} status='error' />\n      <Filter keyword={keyword} setKeyword={setKeyword} />\n      <h2>Add a new</h2>\n      <PersonForm newName={newName} newPhone={newPhone} people={people} \n       setPeople={setPeople} setNewName={setNewName} setPhone={setPhone}\n       setSuccessMessage={setSuccessMessage} setErrorMessage={setErrorMessage} />\n      <h2>Numbers</h2>\n      <Listing people={people} keyword={keyword} setPeople={setPeople} setSuccessMessage={setSuccessMessage}/>\n    </div>\n    )\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}